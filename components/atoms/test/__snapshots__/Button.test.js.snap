// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button render with width prop 1`] = `
.c0 {
  width: 100%;
  font-size: 16px;
}

<Button__StyledButton
  border={2}
  className="c0"
  fontSize={1}
  hollow={false}
  inverted={false}
  width={1}
/>
`;

exports[`Button renders 1`] = `
.c1 {
  border-radius: 32px;
  display: inline-block;
  height: 40px;
  line-height: 1;
  padding-left: 32px;
  padding-right: 32px;
  text-transform: uppercase;
  vertical-align: middle;
  -webkit-tap-highlight-color: transparent;
  outline: 0;
  font-family: inherit;
  font-weight: 600;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #f8f9fa;
  background-color: #0588cb;
  border: none;
  text-align: center;
  -webkit-letter-spacing: .5px;
  -moz-letter-spacing: .5px;
  -ms-letter-spacing: .5px;
  letter-spacing: .5px;
  z-index: 1;
  -webkit-transition: .2s ease-out;
  transition: .2s ease-out;
  cursor: pointer;
}

.c1:hover {
  border: none;
  background-color: #37a6ed;
}

.c1:active {
  -webkit-transition: .2s ease-in;
  transition: .2s ease-in;
  border: none;
  background-color: #0f77b8;
}

.c0 {
  font-size: 16px;
}

<Button
  border={2}
  fontSize={1}
  hollow={false}
  inverted={false}
>
  <Button__StyledButton
    border={2}
    className="c0"
    fontSize={1}
    hollow={false}
    inverted={false}
  >
    <button
      className="c0 c1"
      fontSize={1}
    />
  </Button__StyledButton>
</Button>
`;

exports[`Input renders 1`] = `
.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  margin-left: auto;
  width: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c3 {
  font-size: 16px;
  color: #f03e3e;
}

.c0 {
  font-size: 16px;
  font-family: inherit;
  display: 'block';
  vertical-align: 'middle';
  background-color: transparent;
  border: none;
  border-bottom: 2px solid #f03e3e;
  border-radius: 0;
  margin: 0;
  padding: 0;
  outline: none;
  width: 100%;
  height: 32px;
  box-shadow: none;
  box-sizing: content-box;
  -webkit-transition: all .3s;
  transition: all .3s;
}

.c0:hover:not([readonly]) {
  border-bottom: 2px solid #f03e3e;
}

.c0:focus:not([readonly]) {
  border-bottom: 2px solid #f03e3e;
}

<Input
  error="Some error"
  fontSize={1}
  onChange={[Function]}
  rows={3}
  type="text"
>
  <div>
    <Input__StyledInput
      error="Some error"
      fontSize={1}
      onChange={[Function]}
      rows={3}
      type="text"
    >
      <input
        className="c0"
        fontSize={1}
        onChange={[Function]}
        rows={3}
        type="text"
      />
    </Input__StyledInput>
    <ErrorMessage
      fontSize={1}
    >
      <Flex
        flexWrap="wrap"
      >
        <Box
          className="c1"
          flexWrap="wrap"
        >
          <div
            className="c1 c2"
          >
            <Box>
              <div
                className="c2"
              >
                <Input__StyledErrorMessage
                  fontSize={1}
                >
                  <p
                    className="c3"
                    fontSize={1}
                  >
                    Some error
                  </p>
                </Input__StyledErrorMessage>
              </div>
            </Box>
            <Box
              flex="none"
              ml="auto"
              width={16}
            >
              <div
                className="c4"
                width={16}
              >
                <Input__StyledErrorMessage
                  fontSize={1}
                >
                  <p
                    className="c3"
                    fontSize={1}
                  >
                    <MdWarning>
                      <IconBase
                        viewBox="0 0 40 40"
                      >
                        <svg
                          fill="currentColor"
                          height="1em"
                          preserveAspectRatio="xMidYMid meet"
                          style={
                            Object {
                              "color": undefined,
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 40 40"
                          width="1em"
                        >
                          <g>
                            <path
                              d="m21.6 23.4v-6.8h-3.2v6.8h3.2z m0 6.6v-3.4h-3.2v3.4h3.2z m-20 5l18.4-31.6 18.4 31.6h-36.8z"
                            />
                          </g>
                        </svg>
                      </IconBase>
                    </MdWarning>
                  </p>
                </Input__StyledErrorMessage>
              </div>
            </Box>
          </div>
        </Box>
      </Flex>
    </ErrorMessage>
  </div>
</Input>
`;

exports[`InputWithIconButton render with onAction prop 1`] = `"InputWithIconButton"`;

exports[`InputWithIconButton renders 1`] = `"InputWithIconButton"`;
